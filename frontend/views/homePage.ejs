<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="/css/homePage.css" />
    <title>Home</title>
    <!-- this should be what you get forwarded to after signing in -->
    <!--where posts should be displayed-->
</head>
<body>
    <header>
        <!--https://www.w3schools.com/howto/howto_css_dropdown.asp-->
        <img src="/images/bust.png" class="logo" alt="Logo">
        <div class="container">
            <h1>StudyHub</h1>
        </div>
        <nav>
            <a href="#">Subjects</a>
            <a href="#">Trending</a>
            <a href="/createPost.html">Post</a>
            <!--When going to about page from home page, the sign up and login buttons should disappear-->
            <a href="/aboutPage.html">About</a>
        </nav>
        <div>
            <div class="dropdown">
                <img src="/images/profile.png" class="logo dropdown-toggle" alt="Logo" style="border-radius: 50%;">
                <div class="dropdown-content">
                    <h2 class="greeting"></h2>
                    <a href="/basic">User</a><br>
                    <a href="/logout">Logout</a>
                </div>
            </div>
        </div>
    </header>
    <div class="search-bar">
        <input type="text" id="search-input" placeholder="Search posts...">
        <div class="search-results" id="search-results"></div>
    </div>
    <div class="search-results" id="search-results"></div>
    <div class="posts-container" id="posts-container">
        <!-- Existing posts will be rendered here -->
    </div>
    <script src="/scripts/homePage_script.js"></script>
    <div class="posts">
        <% posts.forEach(post => { %>
            <div class="post">
                <h2><%= post.title %></h2>
                <p><%= post.content %></p>
                <div class="meta">
                    <span>By <%= post.author %></span> |
                    <span><%= post.createdAt ? post.createdAt.toDateString() : 'Unknown Date' %></span>
                </div>
            </div>
        <% }) %>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const searchInput = document.getElementById('search-input');
            const searchResults = document.getElementById('search-results');
    
            searchInput.addEventListener('input', async function() {
                const query = this.value;
                if (query.length > 0) {
                    const response = await fetch(`/api/search?query=${encodeURIComponent(query)}`);
                    const results = await response.json();
                    displayResults(results);
                } else {
                    searchResults.innerHTML = '';
                }
            });
    
            function displayResults(results) {
                searchResults.innerHTML = '';
                results.forEach(result => {
                    const resultItem = document.createElement('div');
                    resultItem.classList.add('search-result');
                    resultItem.innerHTML = `
                        <h3>${result.title}</h3>
                        <p>${result.content}</p>
                    `;
                    searchResults.appendChild(resultItem);
                });
            }
        });
        import { stripHtmlTags } from './utils.js';
        // Assuming you have the content in a variable called postContent
        let postContent = "<p>This is a <strong>test</strong> post.</p>";
        // Sanitize the content
        let sanitizedContent = stripHtmlTags(postContent);
        // Display the sanitized content
        document.getElementById('content').textContent = sanitizedContent;
        let postDescription = "<p>This is a <em>description</em> of the post.</p>";
        let sanitizedDescription = stripHtmlTags(postDescription);
        document.getElementById('description').textContent = sanitizedDescription;

        const displayGreeting = async () => {
            const res = await fetch("/api/auth/currentUser");
            const data = await res.json();
            if (res.ok) {
                const greeting = document.querySelector(".greeting");
                greeting.textContent = `Hello, ${data.username}`;
            } else {
                return null;
            }
        };
        displayGreeting();

        const getRole = async () => {
            const res = await fetch("/api/auth/currentUser");
            const data = await res.json();
            const link = document.querySelector(".dropdown-content a[href='/basic']");
            if (res.ok) {
                if (data.role === "admin") {
                    link.href = "/admin";
                }
            } else {
                return null;
            }
        };
        getRole();

    </script>
</body>

<style>
body {
    background-color: #2B303A;
    color: #fff;
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

.container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
}

header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px 0;
}

header h1 {
    margin: 0;
}

header nav {
    display: flex;
    gap: 20px;
}

.search-bar {
    position: relative;
    display: flex;
    justify-content: center;
    margin: 20px 0;
}

.search-bar input[type="text"] {
    width: 60%;
    padding: 10px;
    border-radius: 5px;
    border: 1px solid #ccc;
}

.search-results {
    position: absolute;
    top: 100%; /* Position the search results just below the search bar */
    left: 285px;
    color: #000000;
    background-color: white;
    border: 1px solid #ccc;
    width: 61%;
    max-height: 200px;
    overflow-y: auto;
    z-index: 1000;
}

.search-result {
    cursor: pointer;
    padding: 10px;
    border-bottom: 1px solid #ccc;
}

.search-result:hover {
    background-color: #f0f0f0;
}
.posts-container {
    max-height: 500px; /* Adjust height as needed */
    overflow-y: auto;
    margin-top: 20px;
}

.posts {
    display: flex;
    flex-direction: column;
    gap: 20px;
    padding: 0 270px; /* Add padding to the left and right */
}

.post {
    background-color: #fff;
    color: #000;
    padding: 20px;
    border-radius: 10px; /* Rounded corners */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Optional: adds shadow */
}

.post .meta {
    margin-top: 10px;
    color: #666;
}

.sidebar {
    position: fixed;
    right: 20px;
    top: 20px;
    background-color: #333;
    color: #fff;
    padding: 10px;
    border-radius: 5px;
    max-width: 200px;
}

.logo {
    width: 60px; 
    height: auto;           
}

nav a {
    color: #f6f5f3; /* Change to your preferred color */
    text-decoration: none; /* Removes underline */
    padding: 20px;
    width: 50px;
    background-color: #645466; /* Optional: adds background color */
    border-radius: 5px; /* Optional: rounds corners */
}

nav a:hover {
    background-color: #666;
}

/* Dropdown Button CSS */
.dropdown {
    position: relative;
    display: inline-block;
}

.dropdown-content {
    display: none;
    position: absolute;
    right: 0;
    background-color: #f9f9f9;
    min-width: 160px;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    padding: 12px 16px;
    z-index: 1;
}

.dropdown-content a:hover {
    background-color: #f1f1f1;
}

.dropdown:hover .dropdown-content {
    display: block;
}

.greeting {
    color: black;
}

</style>

</html>