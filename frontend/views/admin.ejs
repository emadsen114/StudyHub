<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" type="text/css" href="/css/admin.css"    />

    <title>Admin page</title>
  </head>
  <body>
    <div class="display" style="background-color: red;"></div>
    <div class="container">
      <div>
        <h2 class="greeting"></h2>
      </div>
      <div class ="header" style="display: flex; align-items: center; margin-left: auto;">
        <nav>
          <a href="/basic" class="user-page-link">User Page</a>
          <a class="home" href="/homePage">Home</a>
          <a class="create-post" href="/createPost.html">Create Post</a>
          <a class="logout" href="/logout">Log Out</a>
        </nav>
      </div>
      <div class="users-container">
        <div class="users">
          <h2>Active Basic Users</h2>
          <div class="users-list">
            <ul></ul>
          </div>
        </div>
        <div class="admins">
          <h2>Admins</h2>
          <div class="admins-list">
            <ul class=""></ul>
          </div>
        </div>
        <div class="instructions">
          <h2>Instructions</h2>
          <div class="instructions-list">
            <p>Click on the "Edit Role" button to promote a user to admin.</p><br>
            <p>Click on the "Delete User" button to delete a user.</p><br>
          </div>
        </div>
      </div>
    </div>
    <script>
      const displayGreeting = async () => {
      const res = await fetch("/api/auth/currentUser");
      const data = await res.json();
      if (res.ok) {
        const greeting = document.querySelector(".greeting");
        greeting.textContent = `${data.username}'s Admin Dashboard`;
      } else {
        return null;
      }
      };
      displayGreeting();
      const ul = document.querySelector('ul')
    const display = document.querySelector('.display')

    const getUsers = async () => {
      const res = await fetch('/api/auth/getUsers')
      const data = await res.json()
      // get array of only non admin users
      const nonAdminUsers = data.user.filter(mappedUser => mappedUser.role !== 'admin');
      console.log(nonAdminUsers);
      console.log(nonAdminUsers[0].username);
      nonAdminUsers.map((mappedUser) => {
        if(mappedUser){
          let li = `<li> <b>Username</b>: ${mappedUser.username} <br> <b>Role</b>: ${mappedUser.role} </li> <button class="edit">Edit Role</button> <button class="delete">Delete User</button><hr>`
          ul.innerHTML += li
        }else{
          return null
        }
      });
        const editRole = document.querySelectorAll('.edit')
        const deleteUser = document.querySelectorAll('.delete')

        editRole.forEach((button, i) => {
          button.addEventListener('click', async() => {
            if (confirm('Are you sure you want to promote this user to admin?')) {
              display.textContent= ''
              const id = nonAdminUsers[i].id
              //const id = mappedUser.username;
              console.log(id);
              const res = await fetch('/api/auth/update', {
                method: 'PUT',
                body: JSON.stringify({ role: 'admin', id}),
                headers: { 'Content-Type': 'application/json' }
              })
              const dataUpdate = await res.json()
              if (res.status === 400 || res.status === 401) {
                document.body.scrollTop = 0
                document.documentElement.scrollTop = 0
              return display.textContent = `${dataUpdate.message}. ${dataUpdate.error ? dataUpdate.error : ''}`
              }
              console.log("User updated")
              location.assign('/admin')
            }            
          })
        });
        deleteUser.forEach((button, i)=> {
          button.addEventListener('click', async ()=> {
            if (confirm('Are you sure you want to delete this user?')) {
              display.textContent =''
              const id = nonAdminUsers[i].id
              const res = await fetch('/api/auth/deleteUser', {
                method: 'DELETE',
                body: JSON.stringify({id}),
                headers: {'Content-Type': 'application/json'}
              })
              const dataDelete = await res.json()
              if (res.status === 401){
                document.body.scrollTop = 0
                document.documentElement.scrollTop = 0
                return display.textContent = `${dataUpdate.message}. ${dataUpdate.error ? dataUpdate.error : ''}`
              }
              location.assign('/admin')
            }
          })
        })
    }
    const getAdmins = async () => {
      const res = await fetch('/api/auth/getUsers')
      const data = await res.json()
      const adminUsers = data.user.filter(mappedUser => mappedUser.role === 'admin');
      const ulAdmin = document.querySelector('.admins ul')
      adminUsers.map((mappedUser) => {
        if(mappedUser){
          let li = `<li> <b>Username</b>: ${mappedUser.username} <br> <b>Role</b>: ${mappedUser.role} </li><hr>`
          ulAdmin.innerHTML += li
        }else{
          return null
        }
      });
    }

    getUsers()
    getAdmins();
    </script>
  </body>
</html>